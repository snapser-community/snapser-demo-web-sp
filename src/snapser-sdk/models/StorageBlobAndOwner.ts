/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v6 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StorageBlobAndOwner
 */
export interface StorageBlobAndOwner {
    /**
     * 
     * @type {string}
     * @memberof StorageBlobAndOwner
     */
    accessType?: string;
    /**
     * 
     * @type {string}
     * @memberof StorageBlobAndOwner
     */
    cas?: string;
    /**
     * 
     * @type {string}
     * @memberof StorageBlobAndOwner
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof StorageBlobAndOwner
     */
    ownerId?: string;
    /**
     * 
     * @type {string}
     * @memberof StorageBlobAndOwner
     */
    scope?: string;
    /**
     * 
     * @type {string}
     * @memberof StorageBlobAndOwner
     */
    value?: string;
}

/**
 * Check if a given object implements the StorageBlobAndOwner interface.
 */
export function instanceOfStorageBlobAndOwner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBlobAndOwnerFromJSON(json: any): StorageBlobAndOwner {
    return StorageBlobAndOwnerFromJSONTyped(json, false);
}

export function StorageBlobAndOwnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBlobAndOwner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessType': !exists(json, 'access_type') ? undefined : json['access_type'],
        'cas': !exists(json, 'cas') ? undefined : json['cas'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'ownerId': !exists(json, 'owner_id') ? undefined : json['owner_id'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function StorageBlobAndOwnerToJSON(value?: StorageBlobAndOwner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'access_type': value.accessType,
        'cas': value.cas,
        'key': value.key,
        'owner_id': value.ownerId,
        'scope': value.scope,
        'value': value.value,
    };
}

