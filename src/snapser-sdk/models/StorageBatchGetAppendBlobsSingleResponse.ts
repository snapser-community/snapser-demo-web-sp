/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v6 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageGetAppendBlobRequest } from './StorageGetAppendBlobRequest';
import {
    StorageGetAppendBlobRequestFromJSON,
    StorageGetAppendBlobRequestFromJSONTyped,
    StorageGetAppendBlobRequestToJSON,
} from './StorageGetAppendBlobRequest';
import type { StorageUserAppendBlobResponse } from './StorageUserAppendBlobResponse';
import {
    StorageUserAppendBlobResponseFromJSON,
    StorageUserAppendBlobResponseFromJSONTyped,
    StorageUserAppendBlobResponseToJSON,
} from './StorageUserAppendBlobResponse';

/**
 * 
 * @export
 * @interface StorageBatchGetAppendBlobsSingleResponse
 */
export interface StorageBatchGetAppendBlobsSingleResponse {
    /**
     * 
     * @type {string}
     * @memberof StorageBatchGetAppendBlobsSingleResponse
     */
    message?: string;
    /**
     * 
     * @type {StorageGetAppendBlobRequest}
     * @memberof StorageBatchGetAppendBlobsSingleResponse
     */
    request?: StorageGetAppendBlobRequest;
    /**
     * 
     * @type {StorageUserAppendBlobResponse}
     * @memberof StorageBatchGetAppendBlobsSingleResponse
     */
    response?: StorageUserAppendBlobResponse;
    /**
     * 
     * @type {boolean}
     * @memberof StorageBatchGetAppendBlobsSingleResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the StorageBatchGetAppendBlobsSingleResponse interface.
 */
export function instanceOfStorageBatchGetAppendBlobsSingleResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchGetAppendBlobsSingleResponseFromJSON(json: any): StorageBatchGetAppendBlobsSingleResponse {
    return StorageBatchGetAppendBlobsSingleResponseFromJSONTyped(json, false);
}

export function StorageBatchGetAppendBlobsSingleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchGetAppendBlobsSingleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': !exists(json, 'message') ? undefined : json['message'],
        'request': !exists(json, 'request') ? undefined : StorageGetAppendBlobRequestFromJSON(json['request']),
        'response': !exists(json, 'response') ? undefined : StorageUserAppendBlobResponseFromJSON(json['response']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function StorageBatchGetAppendBlobsSingleResponseToJSON(value?: StorageBatchGetAppendBlobsSingleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'request': StorageGetAppendBlobRequestToJSON(value.request),
        'response': StorageUserAppendBlobResponseToJSON(value.response),
        'success': value.success,
    };
}

