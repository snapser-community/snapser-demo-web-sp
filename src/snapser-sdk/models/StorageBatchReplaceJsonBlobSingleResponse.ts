/* tslint:disable */
/* eslint-disable */
/**
 * lap-legend-race-game
 * Your custom SDK
 *
 * The version of the OpenAPI document: lap-legend-race-game: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageReplaceJsonBlobRequest } from './StorageReplaceJsonBlobRequest';
import {
    StorageReplaceJsonBlobRequestFromJSON,
    StorageReplaceJsonBlobRequestFromJSONTyped,
    StorageReplaceJsonBlobRequestToJSON,
} from './StorageReplaceJsonBlobRequest';
import type { StorageReplaceJsonBlobResponse } from './StorageReplaceJsonBlobResponse';
import {
    StorageReplaceJsonBlobResponseFromJSON,
    StorageReplaceJsonBlobResponseFromJSONTyped,
    StorageReplaceJsonBlobResponseToJSON,
} from './StorageReplaceJsonBlobResponse';

/**
 * 
 * @export
 * @interface StorageBatchReplaceJsonBlobSingleResponse
 */
export interface StorageBatchReplaceJsonBlobSingleResponse {
    /**
     * 
     * @type {string}
     * @memberof StorageBatchReplaceJsonBlobSingleResponse
     */
    message?: string;
    /**
     * 
     * @type {StorageReplaceJsonBlobRequest}
     * @memberof StorageBatchReplaceJsonBlobSingleResponse
     */
    request?: StorageReplaceJsonBlobRequest;
    /**
     * 
     * @type {StorageReplaceJsonBlobResponse}
     * @memberof StorageBatchReplaceJsonBlobSingleResponse
     */
    response?: StorageReplaceJsonBlobResponse;
    /**
     * 
     * @type {boolean}
     * @memberof StorageBatchReplaceJsonBlobSingleResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the StorageBatchReplaceJsonBlobSingleResponse interface.
 */
export function instanceOfStorageBatchReplaceJsonBlobSingleResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchReplaceJsonBlobSingleResponseFromJSON(json: any): StorageBatchReplaceJsonBlobSingleResponse {
    return StorageBatchReplaceJsonBlobSingleResponseFromJSONTyped(json, false);
}

export function StorageBatchReplaceJsonBlobSingleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchReplaceJsonBlobSingleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': !exists(json, 'message') ? undefined : json['message'],
        'request': !exists(json, 'request') ? undefined : StorageReplaceJsonBlobRequestFromJSON(json['request']),
        'response': !exists(json, 'response') ? undefined : StorageReplaceJsonBlobResponseFromJSON(json['response']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function StorageBatchReplaceJsonBlobSingleResponseToJSON(value?: StorageBatchReplaceJsonBlobSingleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'request': StorageReplaceJsonBlobRequestToJSON(value.request),
        'response': StorageReplaceJsonBlobResponseToJSON(value.response),
        'success': value.success,
    };
}

