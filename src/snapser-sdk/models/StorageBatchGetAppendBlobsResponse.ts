/* tslint:disable */
/* eslint-disable */
/**
 * lap-legend-race-game
 * Your custom SDK
 *
 * The version of the OpenAPI document: lap-legend-race-game: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageBatchGetAppendBlobsSingleResponse } from './StorageBatchGetAppendBlobsSingleResponse';
import {
    StorageBatchGetAppendBlobsSingleResponseFromJSON,
    StorageBatchGetAppendBlobsSingleResponseFromJSONTyped,
    StorageBatchGetAppendBlobsSingleResponseToJSON,
} from './StorageBatchGetAppendBlobsSingleResponse';
import type { StorageUserAppendBlobResponse } from './StorageUserAppendBlobResponse';
import {
    StorageUserAppendBlobResponseFromJSON,
    StorageUserAppendBlobResponseFromJSONTyped,
    StorageUserAppendBlobResponseToJSON,
} from './StorageUserAppendBlobResponse';

/**
 * 
 * @export
 * @interface StorageBatchGetAppendBlobsResponse
 */
export interface StorageBatchGetAppendBlobsResponse {
    /**
     * 
     * @type {Array<StorageUserAppendBlobResponse>}
     * @memberof StorageBatchGetAppendBlobsResponse
     */
    appendBlobs?: Array<StorageUserAppendBlobResponse>;
    /**
     * 
     * @type {Array<StorageBatchGetAppendBlobsSingleResponse>}
     * @memberof StorageBatchGetAppendBlobsResponse
     */
    results?: Array<StorageBatchGetAppendBlobsSingleResponse>;
}

/**
 * Check if a given object implements the StorageBatchGetAppendBlobsResponse interface.
 */
export function instanceOfStorageBatchGetAppendBlobsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchGetAppendBlobsResponseFromJSON(json: any): StorageBatchGetAppendBlobsResponse {
    return StorageBatchGetAppendBlobsResponseFromJSONTyped(json, false);
}

export function StorageBatchGetAppendBlobsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchGetAppendBlobsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appendBlobs': !exists(json, 'append_blobs') ? undefined : ((json['append_blobs'] as Array<any>).map(StorageUserAppendBlobResponseFromJSON)),
        'results': !exists(json, 'results') ? undefined : ((json['results'] as Array<any>).map(StorageBatchGetAppendBlobsSingleResponseFromJSON)),
    };
}

export function StorageBatchGetAppendBlobsResponseToJSON(value?: StorageBatchGetAppendBlobsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'append_blobs': value.appendBlobs === undefined ? undefined : ((value.appendBlobs as Array<any>).map(StorageUserAppendBlobResponseToJSON)),
        'results': value.results === undefined ? undefined : ((value.results as Array<any>).map(StorageBatchGetAppendBlobsSingleResponseToJSON)),
    };
}

