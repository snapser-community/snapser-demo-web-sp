/* tslint:disable */
/* eslint-disable */
/**
 * my-dev-cluster
 * Your custom SDK
 *
 * The version of the OpenAPI document: my-dev-cluster: v6 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageBatchSingleReplaceBlobResponse } from './StorageBatchSingleReplaceBlobResponse';
import {
    StorageBatchSingleReplaceBlobResponseFromJSON,
    StorageBatchSingleReplaceBlobResponseFromJSONTyped,
    StorageBatchSingleReplaceBlobResponseToJSON,
} from './StorageBatchSingleReplaceBlobResponse';

/**
 * 
 * @export
 * @interface StorageBatchReplaceBlobResponse
 */
export interface StorageBatchReplaceBlobResponse {
    /**
     * 
     * @type {Array<StorageBatchSingleReplaceBlobResponse>}
     * @memberof StorageBatchReplaceBlobResponse
     */
    results?: Array<StorageBatchSingleReplaceBlobResponse>;
}

/**
 * Check if a given object implements the StorageBatchReplaceBlobResponse interface.
 */
export function instanceOfStorageBatchReplaceBlobResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchReplaceBlobResponseFromJSON(json: any): StorageBatchReplaceBlobResponse {
    return StorageBatchReplaceBlobResponseFromJSONTyped(json, false);
}

export function StorageBatchReplaceBlobResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchReplaceBlobResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'results': !exists(json, 'results') ? undefined : ((json['results'] as Array<any>).map(StorageBatchSingleReplaceBlobResponseFromJSON)),
    };
}

export function StorageBatchReplaceBlobResponseToJSON(value?: StorageBatchReplaceBlobResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'results': value.results === undefined ? undefined : ((value.results as Array<any>).map(StorageBatchSingleReplaceBlobResponseToJSON)),
    };
}

