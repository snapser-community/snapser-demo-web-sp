/* tslint:disable */
/* eslint-disable */
/**
 * lap-legend-race-game
 * Your custom SDK
 *
 * The version of the OpenAPI document: lap-legend-race-game: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageBatchGetCountersSingleResponse } from './StorageBatchGetCountersSingleResponse';
import {
    StorageBatchGetCountersSingleResponseFromJSON,
    StorageBatchGetCountersSingleResponseFromJSONTyped,
    StorageBatchGetCountersSingleResponseToJSON,
} from './StorageBatchGetCountersSingleResponse';
import type { StorageUserCounterResponse } from './StorageUserCounterResponse';
import {
    StorageUserCounterResponseFromJSON,
    StorageUserCounterResponseFromJSONTyped,
    StorageUserCounterResponseToJSON,
} from './StorageUserCounterResponse';

/**
 * 
 * @export
 * @interface StorageBatchGetCountersResponse
 */
export interface StorageBatchGetCountersResponse {
    /**
     * 
     * @type {Array<StorageUserCounterResponse>}
     * @memberof StorageBatchGetCountersResponse
     */
    counters?: Array<StorageUserCounterResponse>;
    /**
     * 
     * @type {Array<StorageBatchGetCountersSingleResponse>}
     * @memberof StorageBatchGetCountersResponse
     */
    results?: Array<StorageBatchGetCountersSingleResponse>;
}

/**
 * Check if a given object implements the StorageBatchGetCountersResponse interface.
 */
export function instanceOfStorageBatchGetCountersResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchGetCountersResponseFromJSON(json: any): StorageBatchGetCountersResponse {
    return StorageBatchGetCountersResponseFromJSONTyped(json, false);
}

export function StorageBatchGetCountersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchGetCountersResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'counters': !exists(json, 'counters') ? undefined : ((json['counters'] as Array<any>).map(StorageUserCounterResponseFromJSON)),
        'results': !exists(json, 'results') ? undefined : ((json['results'] as Array<any>).map(StorageBatchGetCountersSingleResponseFromJSON)),
    };
}

export function StorageBatchGetCountersResponseToJSON(value?: StorageBatchGetCountersResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'counters': value.counters === undefined ? undefined : ((value.counters as Array<any>).map(StorageUserCounterResponseToJSON)),
        'results': value.results === undefined ? undefined : ((value.results as Array<any>).map(StorageBatchGetCountersSingleResponseToJSON)),
    };
}

