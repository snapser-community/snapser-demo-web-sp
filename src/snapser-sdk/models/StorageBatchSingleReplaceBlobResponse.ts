/* tslint:disable */
/* eslint-disable */
/**
 * lap-legend-race-game
 * Your custom SDK
 *
 * The version of the OpenAPI document: lap-legend-race-game: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageBlobAndOwner } from './StorageBlobAndOwner';
import {
    StorageBlobAndOwnerFromJSON,
    StorageBlobAndOwnerFromJSONTyped,
    StorageBlobAndOwnerToJSON,
} from './StorageBlobAndOwner';
import type { StorageReplaceBlobRequest } from './StorageReplaceBlobRequest';
import {
    StorageReplaceBlobRequestFromJSON,
    StorageReplaceBlobRequestFromJSONTyped,
    StorageReplaceBlobRequestToJSON,
} from './StorageReplaceBlobRequest';

/**
 * 
 * @export
 * @interface StorageBatchSingleReplaceBlobResponse
 */
export interface StorageBatchSingleReplaceBlobResponse {
    /**
     * 
     * @type {string}
     * @memberof StorageBatchSingleReplaceBlobResponse
     */
    message?: string;
    /**
     * 
     * @type {StorageReplaceBlobRequest}
     * @memberof StorageBatchSingleReplaceBlobResponse
     */
    request?: StorageReplaceBlobRequest;
    /**
     * 
     * @type {StorageBlobAndOwner}
     * @memberof StorageBatchSingleReplaceBlobResponse
     */
    response?: StorageBlobAndOwner;
    /**
     * 
     * @type {boolean}
     * @memberof StorageBatchSingleReplaceBlobResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the StorageBatchSingleReplaceBlobResponse interface.
 */
export function instanceOfStorageBatchSingleReplaceBlobResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchSingleReplaceBlobResponseFromJSON(json: any): StorageBatchSingleReplaceBlobResponse {
    return StorageBatchSingleReplaceBlobResponseFromJSONTyped(json, false);
}

export function StorageBatchSingleReplaceBlobResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchSingleReplaceBlobResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': !exists(json, 'message') ? undefined : json['message'],
        'request': !exists(json, 'request') ? undefined : StorageReplaceBlobRequestFromJSON(json['request']),
        'response': !exists(json, 'response') ? undefined : StorageBlobAndOwnerFromJSON(json['response']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function StorageBatchSingleReplaceBlobResponseToJSON(value?: StorageBatchSingleReplaceBlobResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'request': StorageReplaceBlobRequestToJSON(value.request),
        'response': StorageBlobAndOwnerToJSON(value.response),
        'success': value.success,
    };
}

