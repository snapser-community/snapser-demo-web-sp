/* tslint:disable */
/* eslint-disable */
/**
 * test
 * Your custom SDK
 *
 * The version of the OpenAPI document: test: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageUpsertSubDocumentRequest } from './StorageUpsertSubDocumentRequest';
import {
    StorageUpsertSubDocumentRequestFromJSON,
    StorageUpsertSubDocumentRequestFromJSONTyped,
    StorageUpsertSubDocumentRequestToJSON,
} from './StorageUpsertSubDocumentRequest';

/**
 * 
 * @export
 * @interface StorageBatchUpsertSubDocumentsRequest
 */
export interface StorageBatchUpsertSubDocumentsRequest {
    /**
     * 
     * @type {Array<StorageUpsertSubDocumentRequest>}
     * @memberof StorageBatchUpsertSubDocumentsRequest
     */
    subDocuments?: Array<StorageUpsertSubDocumentRequest>;
}

/**
 * Check if a given object implements the StorageBatchUpsertSubDocumentsRequest interface.
 */
export function instanceOfStorageBatchUpsertSubDocumentsRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchUpsertSubDocumentsRequestFromJSON(json: any): StorageBatchUpsertSubDocumentsRequest {
    return StorageBatchUpsertSubDocumentsRequestFromJSONTyped(json, false);
}

export function StorageBatchUpsertSubDocumentsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchUpsertSubDocumentsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'subDocuments': !exists(json, 'sub_documents') ? undefined : ((json['sub_documents'] as Array<any>).map(StorageUpsertSubDocumentRequestFromJSON)),
    };
}

export function StorageBatchUpsertSubDocumentsRequestToJSON(value?: StorageBatchUpsertSubDocumentsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sub_documents': value.subDocuments === undefined ? undefined : ((value.subDocuments as Array<any>).map(StorageUpsertSubDocumentRequestToJSON)),
    };
}

