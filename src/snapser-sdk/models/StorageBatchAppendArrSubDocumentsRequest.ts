/* tslint:disable */
/* eslint-disable */
/**
 * test
 * Your custom SDK
 *
 * The version of the OpenAPI document: test: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageAppendArrSubDocumentRequest } from './StorageAppendArrSubDocumentRequest';
import {
    StorageAppendArrSubDocumentRequestFromJSON,
    StorageAppendArrSubDocumentRequestFromJSONTyped,
    StorageAppendArrSubDocumentRequestToJSON,
} from './StorageAppendArrSubDocumentRequest';

/**
 * 
 * @export
 * @interface StorageBatchAppendArrSubDocumentsRequest
 */
export interface StorageBatchAppendArrSubDocumentsRequest {
    /**
     * 
     * @type {Array<StorageAppendArrSubDocumentRequest>}
     * @memberof StorageBatchAppendArrSubDocumentsRequest
     */
    subDocuments?: Array<StorageAppendArrSubDocumentRequest>;
}

/**
 * Check if a given object implements the StorageBatchAppendArrSubDocumentsRequest interface.
 */
export function instanceOfStorageBatchAppendArrSubDocumentsRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchAppendArrSubDocumentsRequestFromJSON(json: any): StorageBatchAppendArrSubDocumentsRequest {
    return StorageBatchAppendArrSubDocumentsRequestFromJSONTyped(json, false);
}

export function StorageBatchAppendArrSubDocumentsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchAppendArrSubDocumentsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'subDocuments': !exists(json, 'sub_documents') ? undefined : ((json['sub_documents'] as Array<any>).map(StorageAppendArrSubDocumentRequestFromJSON)),
    };
}

export function StorageBatchAppendArrSubDocumentsRequestToJSON(value?: StorageBatchAppendArrSubDocumentsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sub_documents': value.subDocuments === undefined ? undefined : ((value.subDocuments as Array<any>).map(StorageAppendArrSubDocumentRequestToJSON)),
    };
}

