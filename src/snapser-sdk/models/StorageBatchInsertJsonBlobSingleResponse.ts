/* tslint:disable */
/* eslint-disable */
/**
 * lap-legend-race-game
 * Your custom SDK
 *
 * The version of the OpenAPI document: lap-legend-race-game: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageInsertJsonBlobRequest } from './StorageInsertJsonBlobRequest';
import {
    StorageInsertJsonBlobRequestFromJSON,
    StorageInsertJsonBlobRequestFromJSONTyped,
    StorageInsertJsonBlobRequestToJSON,
} from './StorageInsertJsonBlobRequest';
import type { StorageInsertJsonBlobResponse } from './StorageInsertJsonBlobResponse';
import {
    StorageInsertJsonBlobResponseFromJSON,
    StorageInsertJsonBlobResponseFromJSONTyped,
    StorageInsertJsonBlobResponseToJSON,
} from './StorageInsertJsonBlobResponse';

/**
 * 
 * @export
 * @interface StorageBatchInsertJsonBlobSingleResponse
 */
export interface StorageBatchInsertJsonBlobSingleResponse {
    /**
     * 
     * @type {string}
     * @memberof StorageBatchInsertJsonBlobSingleResponse
     */
    message?: string;
    /**
     * 
     * @type {StorageInsertJsonBlobRequest}
     * @memberof StorageBatchInsertJsonBlobSingleResponse
     */
    request?: StorageInsertJsonBlobRequest;
    /**
     * 
     * @type {StorageInsertJsonBlobResponse}
     * @memberof StorageBatchInsertJsonBlobSingleResponse
     */
    response?: StorageInsertJsonBlobResponse;
    /**
     * 
     * @type {boolean}
     * @memberof StorageBatchInsertJsonBlobSingleResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the StorageBatchInsertJsonBlobSingleResponse interface.
 */
export function instanceOfStorageBatchInsertJsonBlobSingleResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchInsertJsonBlobSingleResponseFromJSON(json: any): StorageBatchInsertJsonBlobSingleResponse {
    return StorageBatchInsertJsonBlobSingleResponseFromJSONTyped(json, false);
}

export function StorageBatchInsertJsonBlobSingleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchInsertJsonBlobSingleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': !exists(json, 'message') ? undefined : json['message'],
        'request': !exists(json, 'request') ? undefined : StorageInsertJsonBlobRequestFromJSON(json['request']),
        'response': !exists(json, 'response') ? undefined : StorageInsertJsonBlobResponseFromJSON(json['response']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function StorageBatchInsertJsonBlobSingleResponseToJSON(value?: StorageBatchInsertJsonBlobSingleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'request': StorageInsertJsonBlobRequestToJSON(value.request),
        'response': StorageInsertJsonBlobResponseToJSON(value.response),
        'success': value.success,
    };
}

