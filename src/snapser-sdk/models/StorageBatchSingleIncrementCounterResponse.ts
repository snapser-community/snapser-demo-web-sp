/* tslint:disable */
/* eslint-disable */
/**
 * lap-legend-race-game
 * Your custom SDK
 *
 * The version of the OpenAPI document: lap-legend-race-game: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageCounterAndOwner } from './StorageCounterAndOwner';
import {
    StorageCounterAndOwnerFromJSON,
    StorageCounterAndOwnerFromJSONTyped,
    StorageCounterAndOwnerToJSON,
} from './StorageCounterAndOwner';
import type { StorageIncrementCounterRequest } from './StorageIncrementCounterRequest';
import {
    StorageIncrementCounterRequestFromJSON,
    StorageIncrementCounterRequestFromJSONTyped,
    StorageIncrementCounterRequestToJSON,
} from './StorageIncrementCounterRequest';

/**
 * 
 * @export
 * @interface StorageBatchSingleIncrementCounterResponse
 */
export interface StorageBatchSingleIncrementCounterResponse {
    /**
     * 
     * @type {string}
     * @memberof StorageBatchSingleIncrementCounterResponse
     */
    message?: string;
    /**
     * 
     * @type {StorageIncrementCounterRequest}
     * @memberof StorageBatchSingleIncrementCounterResponse
     */
    request?: StorageIncrementCounterRequest;
    /**
     * 
     * @type {StorageCounterAndOwner}
     * @memberof StorageBatchSingleIncrementCounterResponse
     */
    response?: StorageCounterAndOwner;
    /**
     * 
     * @type {boolean}
     * @memberof StorageBatchSingleIncrementCounterResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the StorageBatchSingleIncrementCounterResponse interface.
 */
export function instanceOfStorageBatchSingleIncrementCounterResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchSingleIncrementCounterResponseFromJSON(json: any): StorageBatchSingleIncrementCounterResponse {
    return StorageBatchSingleIncrementCounterResponseFromJSONTyped(json, false);
}

export function StorageBatchSingleIncrementCounterResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchSingleIncrementCounterResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': !exists(json, 'message') ? undefined : json['message'],
        'request': !exists(json, 'request') ? undefined : StorageIncrementCounterRequestFromJSON(json['request']),
        'response': !exists(json, 'response') ? undefined : StorageCounterAndOwnerFromJSON(json['response']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function StorageBatchSingleIncrementCounterResponseToJSON(value?: StorageBatchSingleIncrementCounterResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'request': StorageIncrementCounterRequestToJSON(value.request),
        'response': StorageCounterAndOwnerToJSON(value.response),
        'success': value.success,
    };
}

