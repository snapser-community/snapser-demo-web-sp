/* tslint:disable */
/* eslint-disable */
/**
 * test
 * Your custom SDK
 *
 * The version of the OpenAPI document: test: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthLoginMetadata } from './AuthLoginMetadata';
import {
    AuthLoginMetadataFromJSON,
    AuthLoginMetadataFromJSONTyped,
    AuthLoginMetadataToJSON,
} from './AuthLoginMetadata';

/**
 * 
 * @export
 * @interface AuthUsernamePasswordLoginRequest
 */
export interface AuthUsernamePasswordLoginRequest {
    /**
     * Whether to create a user, if it does not exist
     * @type {boolean}
     * @memberof AuthUsernamePasswordLoginRequest
     */
    createUser?: boolean;
    /**
     * 
     * @type {AuthLoginMetadata}
     * @memberof AuthUsernamePasswordLoginRequest
     */
    loginMetadata?: AuthLoginMetadata;
    /**
     * Password used for login
     * @type {string}
     * @memberof AuthUsernamePasswordLoginRequest
     */
    password: string;
    /**
     * User's login ID
     * @type {string}
     * @memberof AuthUsernamePasswordLoginRequest
     */
    username: string;
}

/**
 * Check if a given object implements the AuthUsernamePasswordLoginRequest interface.
 */
export function instanceOfAuthUsernamePasswordLoginRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "password" in value;
    isInstance = isInstance && "username" in value;

    return isInstance;
}

export function AuthUsernamePasswordLoginRequestFromJSON(json: any): AuthUsernamePasswordLoginRequest {
    return AuthUsernamePasswordLoginRequestFromJSONTyped(json, false);
}

export function AuthUsernamePasswordLoginRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthUsernamePasswordLoginRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createUser': !exists(json, 'create_user') ? undefined : json['create_user'],
        'loginMetadata': !exists(json, 'login_metadata') ? undefined : AuthLoginMetadataFromJSON(json['login_metadata']),
        'password': json['password'],
        'username': json['username'],
    };
}

export function AuthUsernamePasswordLoginRequestToJSON(value?: AuthUsernamePasswordLoginRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'create_user': value.createUser,
        'login_metadata': AuthLoginMetadataToJSON(value.loginMetadata),
        'password': value.password,
        'username': value.username,
    };
}

