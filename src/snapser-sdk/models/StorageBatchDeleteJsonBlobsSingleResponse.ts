/* tslint:disable */
/* eslint-disable */
/**
 * lap-legend-race-game
 * Your custom SDK
 *
 * The version of the OpenAPI document: lap-legend-race-game: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageDeleteJsonBlobRequest } from './StorageDeleteJsonBlobRequest';
import {
    StorageDeleteJsonBlobRequestFromJSON,
    StorageDeleteJsonBlobRequestFromJSONTyped,
    StorageDeleteJsonBlobRequestToJSON,
} from './StorageDeleteJsonBlobRequest';
import type { StorageDeleteJsonBlobResponse } from './StorageDeleteJsonBlobResponse';
import {
    StorageDeleteJsonBlobResponseFromJSON,
    StorageDeleteJsonBlobResponseFromJSONTyped,
    StorageDeleteJsonBlobResponseToJSON,
} from './StorageDeleteJsonBlobResponse';

/**
 * 
 * @export
 * @interface StorageBatchDeleteJsonBlobsSingleResponse
 */
export interface StorageBatchDeleteJsonBlobsSingleResponse {
    /**
     * 
     * @type {string}
     * @memberof StorageBatchDeleteJsonBlobsSingleResponse
     */
    message?: string;
    /**
     * 
     * @type {StorageDeleteJsonBlobRequest}
     * @memberof StorageBatchDeleteJsonBlobsSingleResponse
     */
    request?: StorageDeleteJsonBlobRequest;
    /**
     * 
     * @type {StorageDeleteJsonBlobResponse}
     * @memberof StorageBatchDeleteJsonBlobsSingleResponse
     */
    response?: StorageDeleteJsonBlobResponse;
    /**
     * 
     * @type {boolean}
     * @memberof StorageBatchDeleteJsonBlobsSingleResponse
     */
    success?: boolean;
}

/**
 * Check if a given object implements the StorageBatchDeleteJsonBlobsSingleResponse interface.
 */
export function instanceOfStorageBatchDeleteJsonBlobsSingleResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchDeleteJsonBlobsSingleResponseFromJSON(json: any): StorageBatchDeleteJsonBlobsSingleResponse {
    return StorageBatchDeleteJsonBlobsSingleResponseFromJSONTyped(json, false);
}

export function StorageBatchDeleteJsonBlobsSingleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchDeleteJsonBlobsSingleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': !exists(json, 'message') ? undefined : json['message'],
        'request': !exists(json, 'request') ? undefined : StorageDeleteJsonBlobRequestFromJSON(json['request']),
        'response': !exists(json, 'response') ? undefined : StorageDeleteJsonBlobResponseFromJSON(json['response']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function StorageBatchDeleteJsonBlobsSingleResponseToJSON(value?: StorageBatchDeleteJsonBlobsSingleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'request': StorageDeleteJsonBlobRequestToJSON(value.request),
        'response': StorageDeleteJsonBlobResponseToJSON(value.response),
        'success': value.success,
    };
}

