/* tslint:disable */
/* eslint-disable */
/**
 * lap-legend-race-game
 * Your custom SDK
 *
 * The version of the OpenAPI document: lap-legend-race-game: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageBatchSingleUpdateAppendBlobResponse } from './StorageBatchSingleUpdateAppendBlobResponse';
import {
    StorageBatchSingleUpdateAppendBlobResponseFromJSON,
    StorageBatchSingleUpdateAppendBlobResponseFromJSONTyped,
    StorageBatchSingleUpdateAppendBlobResponseToJSON,
} from './StorageBatchSingleUpdateAppendBlobResponse';

/**
 * 
 * @export
 * @interface StorageBatchUpdateAppendBlobResponse
 */
export interface StorageBatchUpdateAppendBlobResponse {
    /**
     * 
     * @type {Array<StorageBatchSingleUpdateAppendBlobResponse>}
     * @memberof StorageBatchUpdateAppendBlobResponse
     */
    results?: Array<StorageBatchSingleUpdateAppendBlobResponse>;
}

/**
 * Check if a given object implements the StorageBatchUpdateAppendBlobResponse interface.
 */
export function instanceOfStorageBatchUpdateAppendBlobResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchUpdateAppendBlobResponseFromJSON(json: any): StorageBatchUpdateAppendBlobResponse {
    return StorageBatchUpdateAppendBlobResponseFromJSONTyped(json, false);
}

export function StorageBatchUpdateAppendBlobResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchUpdateAppendBlobResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'results': !exists(json, 'results') ? undefined : ((json['results'] as Array<any>).map(StorageBatchSingleUpdateAppendBlobResponseFromJSON)),
    };
}

export function StorageBatchUpdateAppendBlobResponseToJSON(value?: StorageBatchUpdateAppendBlobResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'results': value.results === undefined ? undefined : ((value.results as Array<any>).map(StorageBatchSingleUpdateAppendBlobResponseToJSON)),
    };
}

