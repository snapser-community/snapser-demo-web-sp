/* tslint:disable */
/* eslint-disable */
/**
 * test
 * Your custom SDK
 *
 * The version of the OpenAPI document: test: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthUpdateEmailPasswordRequest
 */
export interface AuthUpdateEmailPasswordRequest {
    /**
     * Email address to update
     * @type {string}
     * @memberof AuthUpdateEmailPasswordRequest
     */
    email: string;
    /**
     * New password to be set
     * @type {string}
     * @memberof AuthUpdateEmailPasswordRequest
     */
    newPassword: string;
    /**
     * Old password to be verified. One of old_password or recovery_code is required
     * @type {string}
     * @memberof AuthUpdateEmailPasswordRequest
     */
    oldPassword?: string;
    /**
     * Recovery code received by the user. One of old_password or recovery_code is required
     * @type {string}
     * @memberof AuthUpdateEmailPasswordRequest
     */
    recoveryCode?: string;
}

/**
 * Check if a given object implements the AuthUpdateEmailPasswordRequest interface.
 */
export function instanceOfAuthUpdateEmailPasswordRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "newPassword" in value;

    return isInstance;
}

export function AuthUpdateEmailPasswordRequestFromJSON(json: any): AuthUpdateEmailPasswordRequest {
    return AuthUpdateEmailPasswordRequestFromJSONTyped(json, false);
}

export function AuthUpdateEmailPasswordRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthUpdateEmailPasswordRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'newPassword': json['new_password'],
        'oldPassword': !exists(json, 'old_password') ? undefined : json['old_password'],
        'recoveryCode': !exists(json, 'recovery_code') ? undefined : json['recovery_code'],
    };
}

export function AuthUpdateEmailPasswordRequestToJSON(value?: AuthUpdateEmailPasswordRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'new_password': value.newPassword,
        'old_password': value.oldPassword,
        'recovery_code': value.recoveryCode,
    };
}

