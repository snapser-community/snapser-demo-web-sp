/* tslint:disable */
/* eslint-disable */
/**
 * test
 * Your custom SDK
 *
 * The version of the OpenAPI document: test: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StorageReplaceJsonBlobRequest } from './StorageReplaceJsonBlobRequest';
import {
    StorageReplaceJsonBlobRequestFromJSON,
    StorageReplaceJsonBlobRequestFromJSONTyped,
    StorageReplaceJsonBlobRequestToJSON,
} from './StorageReplaceJsonBlobRequest';

/**
 * 
 * @export
 * @interface StorageBatchReplaceJsonBlobsRequest
 */
export interface StorageBatchReplaceJsonBlobsRequest {
    /**
     * 
     * @type {Array<StorageReplaceJsonBlobRequest>}
     * @memberof StorageBatchReplaceJsonBlobsRequest
     */
    blobs?: Array<StorageReplaceJsonBlobRequest>;
}

/**
 * Check if a given object implements the StorageBatchReplaceJsonBlobsRequest interface.
 */
export function instanceOfStorageBatchReplaceJsonBlobsRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StorageBatchReplaceJsonBlobsRequestFromJSON(json: any): StorageBatchReplaceJsonBlobsRequest {
    return StorageBatchReplaceJsonBlobsRequestFromJSONTyped(json, false);
}

export function StorageBatchReplaceJsonBlobsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StorageBatchReplaceJsonBlobsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blobs': !exists(json, 'blobs') ? undefined : ((json['blobs'] as Array<any>).map(StorageReplaceJsonBlobRequestFromJSON)),
    };
}

export function StorageBatchReplaceJsonBlobsRequestToJSON(value?: StorageBatchReplaceJsonBlobsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blobs': value.blobs === undefined ? undefined : ((value.blobs as Array<any>).map(StorageReplaceJsonBlobRequestToJSON)),
    };
}

