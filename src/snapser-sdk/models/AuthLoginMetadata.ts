/* tslint:disable */
/* eslint-disable */
/**
 * test
 * Your custom SDK
 *
 * The version of the OpenAPI document: test: v1 SDK
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthLoginMetadata
 */
export interface AuthLoginMetadata {
    /**
     * 
     * @type {string}
     * @memberof AuthLoginMetadata
     */
    agent?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthLoginMetadata
     */
    device?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthLoginMetadata
     */
    location?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthLoginMetadata
     */
    platform?: string;
}

/**
 * Check if a given object implements the AuthLoginMetadata interface.
 */
export function instanceOfAuthLoginMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthLoginMetadataFromJSON(json: any): AuthLoginMetadata {
    return AuthLoginMetadataFromJSONTyped(json, false);
}

export function AuthLoginMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthLoginMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'agent': !exists(json, 'agent') ? undefined : json['agent'],
        'device': !exists(json, 'device') ? undefined : json['device'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'platform': !exists(json, 'platform') ? undefined : json['platform'],
    };
}

export function AuthLoginMetadataToJSON(value?: AuthLoginMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'agent': value.agent,
        'device': value.device,
        'location': value.location,
        'platform': value.platform,
    };
}

